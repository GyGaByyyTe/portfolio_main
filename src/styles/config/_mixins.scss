@mixin flex-prop {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

@mixin section-prop {
  background-position: 50% 50%;
  background-repeat: no-repeat;
  background-size: cover;
  height: 100vh;
  min-height: 650px;
  position: relative;
  width: 100%;
}

@mixin transition {
  transition: all 0.3s;
}

@mixin circle($width, $color) {
  width: $width;
  height: $width;
  border-radius: $width / 2;
  background-color: $color;
}

@mixin transition-prop($prop, $time, $func, $delay) {
  transition-property: $prop;
  transition-duration: $time;
  transition-timing-function: $func;
  transition-delay: $delay;
}

// Установка одного свойства на ховер элемента с плавной анимацией
@mixin hover-anim-one($prop, $value) {
  @include transition;

  cursor: pointer;
  &:hover {
    #{$prop}: $value;
  }
}

// Установка нескольких свойств из map на ховер элемента с плавной анимацией
@mixin hover-anim-many($list-prop) {
  @include transition;

  cursor: pointer;
  &:hover {
    @each $key, $value in $list-prop {
      #{$key}: $value;
    }
  }
}

@mixin item--icon-before($top, $translateX, $translateY) {
  content: '';
  position: absolute;
  top: $top;
  transform: translate($translateX, $translateY);
  left: 0;
}

//responsive
@function rem($px, $base: 16px) {
  @return $px / $base + 0rem;
}

@mixin wide {
  @media screen and (min-width: $wide) {
    @content;
  }
}

@mixin tablets {
  @media screen and (max-width: $tablets) and (min-width: $phones) {
    @content;
  }
}

@mixin phones {
  @media screen and (max-width: $phones) {
    @content;
  }
}
